(()=>{"use strict";var t={28:(t,e,n)=>{n.d(e,{Z:()=>c});var o=n(537),r=n.n(o),i=n(645),a=n.n(i)()(r());a.push([t.id,".active {\n    transform: translate(-50%, -50%) scale(1) !important;\n}\n\nbody {\n    margin: 0;\n}\n\n#motherContainer {\n    height: 100vh;\n    background-color: rgb(56, 18, 18);\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n}\n\n#sideBar {\n    grid-column: 1/2;\n    display: grid;\n    grid-template-rows: 2fr 4fr 40rem;\n    font-weight: 300;\n    box-sizing: border-box;\n}\n\n#addContainer {\n    grid-row: 1/2;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n}\n\n.newButton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1.2px;\n}\n\n#tasksByTime {\n    grid-row: 2/3;\n    display: grid;\n    grid-template-rows: repeat(4, 1fr);\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n#tasksByTime > * {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1.2px;\n}\n\n#tasksByCollection {\n    grid-row: 3/4;\n    overflow: scroll;\n}\n\n.collectionItem {\n    display: grid;\n    grid-template-columns: 8fr 1fr;\n    height: 1.5rem;\n    font-size: 1.4rem;\n}\n\n.collectionItem > p {\n    grid-column: 1/9;\n    margin: 0;\n}\n\n.collectionItem > button {\n    grid-column: 9/10;\n}\n\n.deleteButtonIcon {\n    height: 1rem;\n    width: 1rem;\n}\n\n#taskForm,\n#collectionForm {\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    height: 75vh;\n    width: 75vw;\n    transform: translate(-50%, -50%) scale(0);\n}\n\nfieldset {\n    margin: 0;\n    border-bottom: none;\n}\n\nfieldset:last-of-type {\n    border-bottom: groove rgb(192, 192, 192) 2px !important;\n}\n\n#taskFormConfirm,\n#collectionFormConfirm {\n    width: 100%;\n    margin-top: 1.123rem;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,oDAAoD;AACxD;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,iCAAiC;IACjC,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,iCAAiC;IACjC,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,aAAa;IACb,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,kCAAkC;IAClC,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,SAAS;AACb;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;;IAEI,eAAe;IACf,SAAS;IACT,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,yCAAyC;AAC7C;;AAEA;IACI,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,uDAAuD;AAC3D;;AAEA;;IAEI,WAAW;IACX,oBAAoB;AACxB",sourcesContent:[".active {\n    transform: translate(-50%, -50%) scale(1) !important;\n}\n\nbody {\n    margin: 0;\n}\n\n#motherContainer {\n    height: 100vh;\n    background-color: rgb(56, 18, 18);\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n}\n\n#sideBar {\n    grid-column: 1/2;\n    display: grid;\n    grid-template-rows: 2fr 4fr 40rem;\n    font-weight: 300;\n    box-sizing: border-box;\n}\n\n#addContainer {\n    grid-row: 1/2;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n}\n\n.newButton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1.2px;\n}\n\n#tasksByTime {\n    grid-row: 2/3;\n    display: grid;\n    grid-template-rows: repeat(4, 1fr);\n    margin-top: 5px;\n    margin-bottom: 5px;\n}\n\n#tasksByTime > * {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1.2px;\n}\n\n#tasksByCollection {\n    grid-row: 3/4;\n    overflow: scroll;\n}\n\n.collectionItem {\n    display: grid;\n    grid-template-columns: 8fr 1fr;\n    height: 1.5rem;\n    font-size: 1.4rem;\n}\n\n.collectionItem > p {\n    grid-column: 1/9;\n    margin: 0;\n}\n\n.collectionItem > button {\n    grid-column: 9/10;\n}\n\n.deleteButtonIcon {\n    height: 1rem;\n    width: 1rem;\n}\n\n#taskForm,\n#collectionForm {\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    height: 75vh;\n    width: 75vw;\n    transform: translate(-50%, -50%) scale(0);\n}\n\nfieldset {\n    margin: 0;\n    border-bottom: none;\n}\n\nfieldset:last-of-type {\n    border-bottom: groove rgb(192, 192, 192) 2px !important;\n}\n\n#taskFormConfirm,\n#collectionFormConfirm {\n    width: 100%;\n    margin-top: 1.123rem;\n}"],sourceRoot:""}]);const c=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},a=[],c=0;c<t.length;c++){var s=t[c],l=o.base?s[0]+o.base:s[0],d=i[l]||0,u="".concat(l," ").concat(d);i[l]=d+1;var m=n(u),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(A);else{var p=r(A,o);o.byIndex=c,e.splice(c,0,{identifier:u,updater:p,references:1})}a.push(u)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var c=n(i[a]);e[c].references--}for(var s=o(t,r),l=0;l<i.length;l++){var d=n(i[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},78:(t,e,n)=>{n.d(e,{Nx:()=>r});const o=()=>{const t=document.createElement("div");t.setAttribute("id","sideBar");const e=(()=>{const t=(()=>{const t=document.createElement("button");return t.setAttribute("id","addTaskButton"),t.classList.add("newButton"),t})();t.textContent="New task";const e=(()=>{const t=document.createElement("button");return t.setAttribute("id","addCollectionButton"),t.classList.add("newButton"),t})();e.textContent="New collection";const n=document.createElement("div");return n.setAttribute("id","addContainer"),n.appendChild(t),n.appendChild(e),n})();t.appendChild(e);const n=(()=>{const t=document.createElement("button");t.setAttribute("id","sortToday"),t.textContent="Today";const e=document.createElement("button");e.setAttribute("id","sortTomorrow"),e.textContent="Tomorrow";const n=document.createElement("button");n.setAttribute("id","sortNextWeek"),n.textContent="Next week";const o=document.createElement("button");o.setAttribute("id","sortNextMonth"),o.textContent="Next month";const r=document.createElement("div");return r.setAttribute("id","tasksByTime"),r.appendChild(t),r.appendChild(e),r.appendChild(n),r.appendChild(o),r})();t.appendChild(n);const o=(()=>{const t=document.createElement("div");return t.setAttribute("id","tasksByCollection"),t})();return t.appendChild(o),t},r=()=>{const t=document.createElement("div");t.setAttribute("id","motherContainer");const e=o();t.appendChild(e);const n=(()=>{const t=document.createElement("div");return t.setAttribute("id","viewContent"),t})();t.appendChild(n);const r=(()=>{const t=document.createElement("label");t.classList.add("formLabel"),t.textContent="Title",t.setAttribute("for","title");const e=document.createElement("input");e.classList.add("formInput"),e.setAttribute("id","title");const n=document.createElement("fieldset");n.classList.add("fieldset"),n.appendChild(t),n.appendChild(e);const o=document.createElement("label");o.classList.add("Formabel"),o.textContent="Due date",o.setAttribute("for","deadline");const r=document.createElement("input");r.classList.add("formInput"),r.setAttribute("type","date"),r.setAttribute("id","deadline");const i=document.createElement("fieldset");i.classList.add("fieldset"),i.appendChild(o),i.appendChild(r);const a=document.createElement("label");a.classList.add("formLabel"),a.textContent="Description",a.setAttribute("for","description");const c=document.createElement("input");c.classList.add("formInput"),c.setAttribute("id","description");const s=document.createElement("fieldset");s.classList.add("fieldset"),s.appendChild(a),s.appendChild(c);const l=document.createElement("label");l.classList.add("formLabel"),l.textContent="Priority",l.setAttribute("for","priority");const d=document.createElement("input");d.classList.add("formInput"),d.setAttribute("id","priority");const u=document.createElement("fieldset");u.classList.add("fieldset"),u.appendChild(l),u.appendChild(d);const m=document.createElement("label");m.classList.add("formLabel"),m.textContent="Notes",m.setAttribute("for","notes");const A=document.createElement("input");A.classList.add("formInput"),A.setAttribute("id","notes");const p=document.createElement("fieldset");p.classList.add("fieldset"),p.appendChild(m),p.appendChild(A);const C=document.createElement("label");C.classList.add("formLabel"),C.textContent="Collection",C.setAttribute("for","collection");const f=document.createElement("input");f.classList.add("formInput"),f.setAttribute("id","collection");const b=document.createElement("fieldset");b.classList.add("fieldset"),b.appendChild(C),b.appendChild(f);const h=document.createElement("button");h.setAttribute("id","taskFormConfirm"),h.setAttribute("type","button"),h.textContent="Create task";const g=document.createElement("form");return g.setAttribute("id","taskForm"),g.appendChild(n),g.appendChild(i),g.appendChild(s),g.appendChild(u),g.appendChild(p),g.appendChild(b),g.appendChild(h),g})();t.appendChild(r);const i=(()=>{const t=document.createElement("label");t.classList.add("formLabel"),t.setAttribute("for","collectionFormInput"),t.textContent="Title the collection";const e=document.createElement("input");e.setAttribute("id","collectionFormInput"),e.classList.add("formInput");const n=document.createElement("fieldset");n.classList.add("Fieldset"),n.appendChild(t),n.appendChild(e);const o=document.createElement("button");o.setAttribute("id","collectionFormConfirm"),o.setAttribute("type","button"),o.textContent="Create collection";const r=document.createElement("form");return r.setAttribute("id","collectionForm"),r.appendChild(n),r.appendChild(o),r})();return t.appendChild(i),t}},696:(t,e,n)=>{n.d(e,{I:()=>o});const o=()=>({task:(t,e,n,o,r,i)=>({title:t,dueDate:e,description:n,priority:o,notes:r,collection:i}),collection:t=>({title:t,tasks:[]})})}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var o=e.getElementsByTagName("script");o.length&&(t=o[o.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),o=n(795),r=n.n(o),i=n(569),a=n.n(i),c=n(565),s=n.n(c),l=n(216),d=n.n(l),u=n(589),m=n.n(u),A=n(28),p={};p.styleTagTransform=m(),p.setAttributes=s(),p.insert=a().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=d(),e()(A.Z,p),A.Z&&A.Z.locals&&A.Z.locals;var C=n(696),f=n(78);const b=n.p+"bde675c38d54979f589e.svg";document.body.appendChild((0,f.Nx)()),(()=>{const t=[],e=()=>{const e=document.querySelector("#tasksByCollection");for(;e.firstChild;)e.removeChild(e.firstChild);for(let n in t){const o=t[n].title,r=document.createElement("button"),i=document.createElement("img");i.src=b,i.setAttribute("alt","Delete button, represented by an icon of rubbish bin"),i.classList.add("deleteButtonIcon"),r.appendChild(i);const a=document.createElement("p");a.textContent=o;const c=document.createElement("div");c.classList.add("collectionItem"),c.appendChild(a),c.appendChild(r),e.appendChild(c)}},n=document.querySelector("#taskForm");document.querySelector("#addTaskButton").addEventListener("click",(()=>{n.classList.add("active")})),document.querySelector("#taskFormConfirm").addEventListener("click",(()=>{const o=document.querySelector("#title").value,r=document.querySelector("#deadline").value,i=document.querySelector("#description").value,a=document.querySelector("#priority").value,c=document.querySelector("#notes").value,s=document.querySelector("#collection").value,l=(0,C.I)().task(o,r,i,a,c,s),d=t.find((t=>t.title===s));if(d)d&&(console.log("Collection found. Appending"),d.tasks.push(l),console.log(t));else{console.log("No such collection. Creating one.");const e=(0,C.I)().collection(s);e.tasks.push(l),t.push(e),console.log(t)}n.classList.remove("active"),e()}));const o=document.querySelector("#collectionForm");document.querySelector("#addCollectionButton").addEventListener("click",(()=>{o.classList.add("active")})),document.querySelector("#collectionFormConfirm").addEventListener("click",(()=>{const n=document.querySelector("#collectionFormInput").value,r=t.find((t=>t.title===n));if(r)console.log("Collection found, no new collection was created.");else if(!r){console.log("No such collection. Creating one.");const e=(0,C.I)().collection(n);t.push(e),console.log(t)}o.classList.remove("active"),e()}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,