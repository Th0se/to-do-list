(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(537),r=n.n(o),i=n(645),a=n.n(i)()(r());a.push([e.id,".active {\n    transform: translate(-50%, -50%) scale(1) !important;\n}\n\nbody {\n    margin: 0;\n}\n\n#motherContainer {\n    height: 100vh;\n    background-color: black;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    color: black;\n}\n\n#sideBar {\n    grid-column: 1/2;\n    display: grid;\n    grid-template-rows: 10rem 40rem;\n    font-weight: 300;\n    box-sizing: border-box;\n}\n\n#addContainer {\n    grid-row: 1/2;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    font-size: 1.5rem;\n}\n\n.newButton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1.2px;\n}\n\n#tasksByCollection {\n    grid-row: 2/3;\n    overflow: scroll;\n    font-size: 1.7rem;\n}\n\n.collectionItem {\n    display: grid;\n    grid-template-columns: 8fr 1fr;\n    height: 5rem;\n    overflow: scroll;\n    align-items: center;\n    justify-content: center;\n    margin: 1.2px;\n}\n\n.collectionItem > div {\n    grid-column: 1/9;\n    margin: 0;\n    text-align: center;\n}\n\n.collectionItem > button {\n    grid-column: 9/10;\n}\n\n.deleteButtonIcon {\n    height: 1rem;\n    width: 1rem;\n}\n\n#taskForm,\n#collectionForm {\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    height: 75vh;\n    width: 75vw;\n    transform: translate(-50%, -50%) scale(0);\n}\n\nfieldset {\n    margin: 0;\n    border-bottom: none;\n}\n\nfieldset:last-of-type {\n    border-bottom: groove rgb(192, 192, 192) 2px !important;\n}\n\n#taskFormConfirm,\n#collectionFormConfirm {\n    width: 100%;\n    margin-top: 1.123rem;\n}\n\n.displayItem,\nbutton,\n.collectionItem,\nfieldset,\n.displayTitle,\n.displayTaskLabel,\n.displayTaskValue {\n    background-color: #00FF7F;\n}\n\n#viewContent {\n    padding: 1.5rem;\n}\n.displayItem {\n    margin: 3px 0;\n    display: grid;\n    grid-template-columns: 1fr 2rem;\n}\n\n.displayItem > div {\n    display: flex;\n    align-items: center;\n}\n\n.displayTaskContainer {\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    margin: 3px 0;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,oDAAoD;AACxD;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,8BAA8B;IAC9B,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,+BAA+B;IAC/B,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,aAAa;IACb,kCAAkC;IAClC,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;;IAEI,eAAe;IACf,SAAS;IACT,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,yCAAyC;AAC7C;;AAEA;IACI,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,uDAAuD;AAC3D;;AAEA;;IAEI,WAAW;IACX,oBAAoB;AACxB;;AAEA;;;;;;;IAOI,yBAAyB;AAC7B;;AAEA;IACI,eAAe;AACnB;AACA;IACI,aAAa;IACb,aAAa;IACb,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,aAAa;AACjB",sourcesContent:[".active {\n    transform: translate(-50%, -50%) scale(1) !important;\n}\n\nbody {\n    margin: 0;\n}\n\n#motherContainer {\n    height: 100vh;\n    background-color: black;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    color: black;\n}\n\n#sideBar {\n    grid-column: 1/2;\n    display: grid;\n    grid-template-rows: 10rem 40rem;\n    font-weight: 300;\n    box-sizing: border-box;\n}\n\n#addContainer {\n    grid-row: 1/2;\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    font-size: 1.5rem;\n}\n\n.newButton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1.2px;\n}\n\n#tasksByCollection {\n    grid-row: 2/3;\n    overflow: scroll;\n    font-size: 1.7rem;\n}\n\n.collectionItem {\n    display: grid;\n    grid-template-columns: 8fr 1fr;\n    height: 5rem;\n    overflow: scroll;\n    align-items: center;\n    justify-content: center;\n    margin: 1.2px;\n}\n\n.collectionItem > div {\n    grid-column: 1/9;\n    margin: 0;\n    text-align: center;\n}\n\n.collectionItem > button {\n    grid-column: 9/10;\n}\n\n.deleteButtonIcon {\n    height: 1rem;\n    width: 1rem;\n}\n\n#taskForm,\n#collectionForm {\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    height: 75vh;\n    width: 75vw;\n    transform: translate(-50%, -50%) scale(0);\n}\n\nfieldset {\n    margin: 0;\n    border-bottom: none;\n}\n\nfieldset:last-of-type {\n    border-bottom: groove rgb(192, 192, 192) 2px !important;\n}\n\n#taskFormConfirm,\n#collectionFormConfirm {\n    width: 100%;\n    margin-top: 1.123rem;\n}\n\n.displayItem,\nbutton,\n.collectionItem,\nfieldset,\n.displayTitle,\n.displayTaskLabel,\n.displayTaskValue {\n    background-color: #00FF7F;\n}\n\n#viewContent {\n    padding: 1.5rem;\n}\n.displayItem {\n    margin: 3px 0;\n    display: grid;\n    grid-template-columns: 1fr 2rem;\n}\n\n.displayItem > div {\n    display: flex;\n    align-items: center;\n}\n\n.displayTaskContainer {\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    margin: 3px 0;\n}"],sourceRoot:""}]);const l=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(a[c]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],l=0;l<e.length;l++){var c=e[l],s=o.base?c[0]+o.base:c[0],d=i[s]||0,u="".concat(s," ").concat(d);i[s]=d+1;var m=n(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==m)t[m].references++,t[m].updater(A);else{var p=r(A,o);o.byIndex=l,t.splice(l,0,{identifier:u,updater:p,references:1})}a.push(u)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var l=n(i[a]);t[l].references--}for(var c=o(e,r),s=0;s<i.length;s++){var d=n(i[s]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},78:(e,t,n)=>{n.d(t,{Nx:()=>r});const o=()=>{const e=document.createElement("div");e.setAttribute("id","sideBar");const t=(()=>{const e=(()=>{const e=document.createElement("button");return e.setAttribute("id","addTaskButton"),e.classList.add("newButton"),e})();e.textContent="New task";const t=(()=>{const e=document.createElement("button");return e.setAttribute("id","addCollectionButton"),e.classList.add("newButton"),e})();t.textContent="New collection";const n=document.createElement("div");return n.setAttribute("id","addContainer"),n.appendChild(e),n.appendChild(t),n})();e.appendChild(t);const n=(()=>{const e=document.createElement("div");return e.setAttribute("id","tasksByCollection"),e})();return e.appendChild(n),e},r=()=>{const e=document.createElement("div");e.setAttribute("id","motherContainer");const t=o();e.appendChild(t);const n=(()=>{const e=document.createElement("div");return e.setAttribute("id","viewContent"),e})();e.appendChild(n);const r=(()=>{const e=document.createElement("label");e.classList.add("formLabel"),e.textContent="Title",e.setAttribute("for","title");const t=document.createElement("input");t.classList.add("formInput"),t.setAttribute("id","title");const n=document.createElement("fieldset");n.classList.add("fieldset"),n.appendChild(e),n.appendChild(t);const o=document.createElement("label");o.classList.add("Formabel"),o.textContent="Due date",o.setAttribute("for","deadline");const r=document.createElement("input");r.classList.add("formInput"),r.setAttribute("type","date"),r.setAttribute("id","deadline");const i=document.createElement("fieldset");i.classList.add("fieldset"),i.appendChild(o),i.appendChild(r);const a=document.createElement("label");a.classList.add("formLabel"),a.textContent="Description",a.setAttribute("for","description");const l=document.createElement("input");l.classList.add("formInput"),l.setAttribute("id","description");const c=document.createElement("fieldset");c.classList.add("fieldset"),c.appendChild(a),c.appendChild(l);const s=document.createElement("label");s.classList.add("formLabel"),s.textContent="Priority",s.setAttribute("for","priority");const d=document.createElement("input");d.classList.add("formInput"),d.setAttribute("id","priority");const u=document.createElement("fieldset");u.classList.add("fieldset"),u.appendChild(s),u.appendChild(d);const m=document.createElement("label");m.classList.add("formLabel"),m.textContent="Notes",m.setAttribute("for","notes");const A=document.createElement("input");A.classList.add("formInput"),A.setAttribute("id","notes");const p=document.createElement("fieldset");p.classList.add("fieldset"),p.appendChild(m),p.appendChild(A);const C=document.createElement("label");C.classList.add("formLabel"),C.textContent="Collection",C.setAttribute("for","collection");const f=document.createElement("input");f.classList.add("formInput"),f.setAttribute("id","collection");const h=document.createElement("fieldset");h.classList.add("fieldset"),h.appendChild(C),h.appendChild(f);const g=document.createElement("button");g.setAttribute("id","taskFormConfirm"),g.setAttribute("type","button"),g.textContent="Create task";const b=document.createElement("form");return b.setAttribute("id","taskForm"),b.appendChild(n),b.appendChild(i),b.appendChild(c),b.appendChild(u),b.appendChild(p),b.appendChild(h),b.appendChild(g),b})();e.appendChild(r);const i=(()=>{const e=document.createElement("label");e.classList.add("formLabel"),e.setAttribute("for","collectionFormInput"),e.textContent="Title the collection";const t=document.createElement("input");t.setAttribute("id","collectionFormInput"),t.classList.add("formInput");const n=document.createElement("fieldset");n.classList.add("Fieldset"),n.appendChild(e),n.appendChild(t);const o=document.createElement("button");o.setAttribute("id","collectionFormConfirm"),o.setAttribute("type","button"),o.textContent="Create collection";const r=document.createElement("form");return r.setAttribute("id","collectionForm"),r.appendChild(n),r.appendChild(o),r})();return e.appendChild(i),e}},696:(e,t,n)=>{n.d(t,{I:()=>o});const o=()=>({task:(e,t,n,o,r,i)=>({title:e,dueDate:t,description:n,priority:o,notes:r,collection:i}),collection:e=>({title:e,tasks:[]})})}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),i=n(569),a=n.n(i),l=n(565),c=n.n(l),s=n(216),d=n.n(s),u=n(589),m=n.n(u),A=n(28),p={};p.styleTagTransform=m(),p.setAttributes=c(),p.insert=a().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=d(),t()(A.Z,p),A.Z&&A.Z.locals&&A.Z.locals;var C=n(696),f=n(78);const h=n.p+"bde675c38d54979f589e.svg";document.body.appendChild((0,f.Nx)()),(()=>{let e=[];localStorage.getItem("motherCollection")?e=JSON.parse(localStorage.getItem("motherCollection")):(e=[],localStorage.setItem("motherCollection",JSON.stringify(e)));const t=document.querySelector("#viewContent"),n=()=>{localStorage.setItem("motherCollection",JSON.stringify(e))},o=()=>{const i=document.querySelector("#tasksByCollection");for(;i.firstChild;)i.removeChild(i.firstChild);for(let a of e){const l=a.title,c=document.createElement("button"),s=document.createElement("img");s.src=h,s.setAttribute("alt","Delete button, represented by an icon of rubbish bin"),s.classList.add("deleteButtonIcon"),c.appendChild(s),c.addEventListener("click",(()=>{const t=e.indexOf(a);e.splice(t,1),n(),o()}));const d=document.createElement("div");d.textContent=l,d.addEventListener("click",(()=>{for(;t.firstChild;)t.removeChild(t.firstChild);r(a)}));const u=document.createElement("div");u.classList.add("collectionItem"),u.appendChild(d),u.appendChild(c),i.appendChild(u)}},r=e=>{const o=document.createElement("div");o.textcontent=e.title,o.classList.add("displayTitle"),t.appendChild(o);const r=o=>{const r=(e,t)=>{const n=document.createElement("div");n.classList="displayTaskLabel",n.textContent=e;const o=document.createElement("div");o.classList="displayTaskValue",o.textContent=t;const r=document.createElement("div");return r.classList="displayTaskContainer",r.appendChild(n),r.appendChild(o),r},i=document.createElement("div");i.textContent=o.title,i.addEventListener("click",(()=>{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(r("Title",o.title)),t.appendChild(r("Due",o.dueDate)),t.appendChild(r("Description",o.description)),t.appendChild(r("Notes",o.notes)),t.appendChild(r("Priority",o.priority))}));const a=document.createElement("button"),l=document.createElement("img");l.src=h,l.setAttribute("alt","Delete button, represented by an icon of rubbish bin"),l.classList.add("deleteButtonIcon"),a.appendChild(l),a.addEventListener("click",(()=>{const t=e.tasks.indexOf(o);e.tasks.splice(t,1),n(),console.log("Item deleted. Please refresh the page to see the updated list.")}));const c=document.createElement("div");return c.classList.add("displayItem"),c.appendChild(i),c.appendChild(a),c};for(let n of e.tasks){const e=r(n);t.appendChild(e)}},i=document.querySelector("#taskForm");document.querySelector("#addTaskButton").addEventListener("click",(()=>{i.classList.add("active")})),document.querySelector("#taskFormConfirm").addEventListener("click",(()=>{const t=document.querySelector("#title").value,r=document.querySelector("#deadline").value,a=document.querySelector("#description").value,l=document.querySelector("#priority").value,c=document.querySelector("#notes").value,s=document.querySelector("#collection").value,d=(0,C.I)().task(t,r,a,l,c,s),u=e.find((e=>e.title===s));if(u)u&&(console.log("Collection found. Appending"),u.tasks.push(d));else{console.log("No such collection. Creating one.");const t=(0,C.I)().collection(s);t.tasks.push(d),e.push(t)}i.classList.remove("active"),o(),n()}));const a=document.querySelector("#collectionForm");document.querySelector("#addCollectionButton").addEventListener("click",(()=>{a.classList.add("active")})),document.querySelector("#collectionFormConfirm").addEventListener("click",(()=>{const t=document.querySelector("#collectionFormInput").value,r=e.find((e=>e.title===t));if(r)console.log("Collection found, no new collection was created.");else if(!r){console.log("No such collection. Creating one.");const n=(0,C.I)().collection(t);e.push(n),console.log(e)}a.classList.remove("active"),o(),n()})),o()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,